// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: user.sql

package db

import (
	"context"
	"database/sql"
)

const getUser = `-- name: GetUser :one
SELECT id, username, password, refresh_token FROM user
WHERE id = ? LIMIT 1
`

func (q *Queries) GetUser(ctx context.Context, id int32) (User, error) {
	row := q.db.QueryRowContext(ctx, getUser, id)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Password,
		&i.RefreshToken,
	)
	return i, err
}

const signUpUser = `-- name: SignUpUser :execresult
INSERT INTO user (username, password)
VALUES (?, ?)
`

type SignUpUserParams struct {
	Username string
	Password string
}

func (q *Queries) SignUpUser(ctx context.Context, arg SignUpUserParams) (sql.Result, error) {
	return q.db.ExecContext(ctx, signUpUser, arg.Username, arg.Password)
}
